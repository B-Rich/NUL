# -*- Mode: Python -*-

import nul
import os

Import('target_env')
Import('host_env')

if 'SSH_AUTH_SOCK' in os.environ:
    host_env['ENV']['SSH_AUTH_SOCK'] = os.environ['SSH_AUTH_SOCK'];

# If a NOVA directory exists, use it as-is, otherwise checkout a
# known-good revision and apply our patches (if there are any).
checkout = host_env.Command("nova/README", ["NOVA_URL", "NOVA_REVISION", "checkout-nova.sh", Glob("nova-patches/*.patch")],
                            "${SOURCES[2]} `dirname $TARGET` `cat ${SOURCES[0]}` `cat ${SOURCES[1]}` ${SOURCES[3:]}")

build = target_env.Command("nova/build/hypervisor-x86_32", "nova/README",
                           "make -sC `dirname $TARGET` CC=${CC} CXX=${CXX}" % target_env)
AlwaysBuild(build)
Precious(build)

host_env.InstallAs("#bin/apps/hypervisor", build)
                         

# EOF
